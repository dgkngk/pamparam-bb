{"ast":null,"code":"var _jsxFileName = \"/home/skyracer/Documents/code_repo/stupidcodingstuff/pamparam-bb/pamparam-fe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  render() {\n    var list = ApiCall();\n    return list + /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"App-logo\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Clock, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date()\n    };\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date()\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"t:\", this.state.date.toLocaleTimeString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nfunction ApiCall() {\n  _s();\n\n  const [apiData, setApiData] = useState({\n    \"loading\": \"loading\"\n  });\n  useEffect(() => {\n    fetch('/trial').then(res => res.json()).then(data => {\n      setApiData(data);\n    });\n  }, []);\n  var list = Object.keys(apiData).map(function (key) {\n    return apiData[key];\n  });\n  console.log(list);\n  console.log(typeof list);\n  return list.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [\" \", item, \" \"]\n  }, item, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 11\n  }, this));\n}\n\n_s(ApiCall, \"fMNPJrRpBNsnqbwUfty1MaAsk3k=\");\n\n_c = ApiCall;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApiCall\");","map":{"version":3,"sources":["/home/skyracer/Documents/code_repo/stupidcodingstuff/pamparam-bb/pamparam-fe/src/App.js"],"names":["React","useState","useEffect","App","Component","render","list","ApiCall","logo","Clock","constructor","props","state","date","Date","componentDidMount","timerID","setInterval","tick","componentWillUnmount","clearInterval","setState","toLocaleTimeString","apiData","setApiData","fetch","then","res","json","data","Object","keys","map","key","console","log","item"],"mappings":";;;;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAEhCC,EAAAA,MAAM,GAAE;AAEN,QAAIC,IAAI,GAAGC,OAAO,EAAlB;AACA,WAAQD,IAAI,gBACV;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA,gCAIE;AAAK,UAAA,GAAG,EAAEE,IAAV;AAAgB,UAAA,SAAS,EAAC,UAA1B;AAAqC,UAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,gBAJF,eAME,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AAnB+B;;AAqBlC,MAAMC,KAAN,SAAoBT,KAAK,CAACI,SAA1B,CAAoC;AAClCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,IAAI,EAAE,IAAIC,IAAJ;AAAP,KAAb;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,OAAL,GAAeC,WAAW,CACxB,MAAM,KAAKC,IAAL,EADkB,EAExB,IAFwB,CAA1B;AAID;;AAEDC,EAAAA,oBAAoB,GAAG;AACrBC,IAAAA,aAAa,CAAC,KAAKJ,OAAN,CAAb;AACD;;AACDE,EAAAA,IAAI,GAAG;AACL,SAAKG,QAAL,CAAc;AAACR,MAAAA,IAAI,EAAE,IAAIC,IAAJ;AAAP,KAAd;AACD;;AAEDT,EAAAA,MAAM,GAAG;AACP,wBACI;AAAA,uBAAO,KAAKO,KAAL,CAAWC,IAAX,CAAgBS,kBAAhB,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGD;;AAvBiC;;AAyBpC,SAASf,OAAT,GAAmB;AAAA;;AACf,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBvB,QAAQ,CAAC;AAAC,eAAU;AAAX,GAAD,CAAtC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACduB,IAAAA,KAAK,CAAC,QAAD,CAAL,CAAgBC,IAAhB,CAAqBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAA5B,EAAwCF,IAAxC,CAA6CG,IAAI,IAAI;AAACL,MAAAA,UAAU,CAACK,IAAD,CAAV;AACrD,KADD;AAED,GAHQ,EAGP,EAHO,CAAT;AAKA,MAAIvB,IAAI,GAAGwB,MAAM,CAACC,IAAP,CAAYR,OAAZ,EAAqBS,GAArB,CAAyB,UAASC,GAAT,EAAa;AAC/C,WAAOV,OAAO,CAACU,GAAD,CAAd;AACD,GAFU,CAAX;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAY7B,IAAZ;AACA4B,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAO7B,IAAnB;AAIA,SAEIA,IAAI,CAAC0B,GAAL,CAASI,IAAI,iBACX;AAAA,oBAAiBA,IAAjB;AAAA,KAASA,IAAT;AAAA;AAAA;AAAA;AAAA,UADF,CAFJ;AAOD;;GAtBM7B,O;;KAAAA,O;AAwBT,eAAeJ,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, {useState, useEffect} from 'react';\n\nclass App extends React.Component {\n\n  render(){\n\n    var list = ApiCall();\n    return (list +\n      <div className=\"App\">\n        <header className=\"App-header\">\n\n          \n\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\n          <Clock />\n          \n          \n        </header>\n      </div>\n    );\n  }\n}\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {date: new Date()};\n  }\n  componentDidMount() {\n    this.timerID = setInterval(\n      () => this.tick(),\n      1000\n      );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n  tick() {\n    this.setState({date: new Date()});\n  }\n\n  render() {\n    return(\n        <h2>t:{this.state.date.toLocaleTimeString()}</h2>\n      );\n  }\n}\nfunction ApiCall() {\n    const [apiData, setApiData] = useState({\"loading\":\"loading\"});\n    useEffect(() => {\n      fetch('/trial').then(res => res.json()).then(data => {setApiData(data);\n      });\n    },[]);\n\n    var list = Object.keys(apiData).map(function(key){\n      return apiData[key];\n    });\n    console.log(list);\n    console.log(typeof list);\n\n\n\n    return(\n      \n        list.map(item=> (\n          <li key={item}> {item} </li>\n        )\n      \n      ));\n  }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}