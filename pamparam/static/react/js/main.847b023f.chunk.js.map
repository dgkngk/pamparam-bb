{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","asd","window","token","split","className","src","logo","alt","React","Component","Clock","props","state","date","Date","this","timerID","setInterval","tick","clearInterval","setState","toLocaleTimeString","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAAe,MAA0B,0B,eCKnCA,E,4JAGJ,WAEE,IAAMC,EAAMC,OAAOC,MAAMC,MAAM,KAE/B,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,4BAAIP,IACJ,cAAC,EAAD,a,GAZQQ,IAAMC,WAmBlBC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAO,CAACC,KAAM,IAAIC,MAFN,E,qDAKnB,WAAqB,IAAD,OAClBC,KAAKC,QAAUC,aACb,kBAAM,EAAKC,SACX,O,kCAIJ,WACEC,cAAcJ,KAAKC,W,kBAGrB,WACED,KAAKK,SAAS,CACZP,KAAM,IAAIC,S,oBAKd,WACE,OAEE,8BACE,qCAAQC,KAAKH,MAAMC,KAAKQ,8B,GA5BZb,IAAMC,WAkCXV,IC9CAuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"js/main.847b023f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport React, { Component} from 'react';\nimport './App.css';\n//import React.Component;\n\nclass App extends React.Component{\n  \n\n  render() {\n\n    const asd = window.token.split(\"[\");\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>{asd}</p>\n          <Clock />\n        </header>\n      </div>\n    );\n  }\n}\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state ={date: new Date()};\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(\n      () => this.tick(),\n      1000\n      );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date()\n    });\n  }\n\n\n  render(){\n    return (\n\n      <div>\n        <h2> c:{this.state.date.toLocaleTimeString()}</h2>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}